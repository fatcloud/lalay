#! /usr/bin/env python3



# 定義一個函數，會把 text 裡面的字用 cutter list 裡的字元切開，回傳切開後的 list
def cut_into_pieces(text, cutter_list):

    tokens = []
    token = ""

    for char in text:
        if char not in cutter_list:
            token += char
        else:
            if token != "":
                tokens.append(token)
            token = ""
            tokens.append(char)

    if token != "":
        tokens.append(token)

    return tokens



def fix_space_and_comma(paragraph):

    # ========================= 第一關：處理空白和逗號 ============================
    # 刪除所有夾雜在中文內的空白，並將逗號從小寫改大寫
    # 這裡的作法是把整串字沿著所有的空白和逗號切開，並紀錄遇到該符號前到底讀到的是英文還是中文
    # 背景文字 (context) 是中文的情況下才去做處理

    tokens = cut_into_pieces(paragraph, [',', ' '])

    clean_paragraph = ""
    context_is_chinese = False

    replacer = {' '  : '' ,     # 空白轉成無字元
                '\t' : '' ,     # tab 也轉成無字元
                ','  : '，'}    # 小寫逗點轉成大寫

    for token in tokens:
        # 以下視情況切換中英模式：都字母的話當然英文，Unicode 數字超過一萬八成是中文
        
        unicode_last_char = ord(token[-1:])
        if unicode_last_char in range(65,91) or unicode_last_char in range(97,123):
            context_is_chinese = False
        
        elif unicode_last_char > 10000:
            context_is_chinese = True
            
        elif context_is_chinese and token in replacer:
            # token 非中非英而是符號，而且背景是中文的情況下，把空白刪除，並且把小寫逗點換大寫
            token = replacer[token]
        
        # 把處理完的 token 接上 clean_paragraph
        clean_paragraph += token

    return clean_paragraph



def newlines_on_delimiter(paragraph)

    # ===================== 第二關：見到中文標點符號就換行 ========================

    delimiter = ['，', '。', '、']

    lines = []
    line = ""

    tokens = cut_into_pieces(paragraph, delimiter)
    for token in tokens:
        line += token
        if token in delimiter:
            lines.append(line)
            line = ""

    return lines

